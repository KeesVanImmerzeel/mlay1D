shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
df <- clipr::read_clip_tbl(header = FALSE, dec = ".")
area <- df[1, ] %>% as.character()
df <- df[2:nrow(df), ] %>% mutate_if(is.character, as.numeric)
nLay <- (nrow(df) - 2) / 3
nSec <- ncol(df)
x <- df[1, 1:(nSec - 1)] %>% as.double() %>% as.vector()
h <- df[2, ] %>% as.double() %>% as.vector()
i <- seq(from = 3,
to = nLay * 3,
length.out = nLay)
c_ <- df[i, ] %>% data.matrix()
kD <- df[i + 1, ] %>% data.matrix()
Q <- df[i + 2, ] %>% data.matrix()
m <- solve_mlay1d(kD, c_, Q, h, x, X = x)
i <- c(1, which((area == udpipe::txt_previous(area, n = 1)) != TRUE))
labls <- data.frame(xvlines = x[i], txt = area[i])
labls$xvlines[1] <- NA
labls
i <- c(1, which((area == udpipe::txt_previous(area, n = 1)) != TRUE))
labls <- data.frame(xvlines = x[i], txt = area[i])
labls
x
c(NA,x)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
letters
length(letters)
LETTERS
LETTERS[1:5]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
<-
packages.loading <-
c( "expm",
"installr",
"rstudioapi",
"pracma",
"reshape2",
"dplyr",
"magrittr",
"ggplot2",
"clipr",
"udpipe",
"stats",
"tidyr"
)
shiny::runApp()
library(shinyMatrix)
install.packages("shinyMatrix")
?setRepositories
setRepositories()
install.packages("shinyMatrix", dependencies=TRUE, repos='http://cran.rstudio.com/')
install.packages('shinyMatrix',repos='http://cran.us.r-project.org')
library(shinyMatrix)
library(expm)
install.packages('expm',repos='http://cran.us.r-project.org')
library(expm)
library(pracma)
install.packages('pracma',repos='http://cran.us.r-project.org')
library(pracma)
library(ggplot2)
library(reshape2)
library(dplyr)
library(magrittr)
library(tidyr)
runApp()
runApp()
runApp()
?numericInput()
runApp()
runApp()
install.packages("packrat")
runApp()
install.packages("packrat")
install.packages("packrat")
install.packages("packrat")
library(shinyMatrix)
library(expm)
library(pracma)
library(ggplot2)
library(reshape2)
library(dplyr)
library(magrittr)
library(tidyr)
shiny::runApp()
install.packages("installr")
install.packages("data.table")
runApp()
runApp()
install.packages("udpipe")
runApp()
shiny::runApp()
?plotOutput
runApp()
runApp()
runApp()
runApp()
runApp()
?sidebarPanel()
sidebarPanel()
?sidebarPanel()
?verbatimTextOutput()
runApp()
?tabPanel()
runApp()
runApp()
runApp()
?cat
runApp()
runApp()
shiny::runApp()
library(shinyMatrix)
library(expm)
library(pracma)
install.packages("pracma")
library(pracma)
library(ggplot2)
library(reshape2)
library(dplyr)
library(magrittr)
library(tidyr)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?session$sendCustomMessage()
?sendCustomMessage()
install.packages("shinyalert")
?shinyalert()
?shinyalert()
runApp()
runApp()
runApp()
runApp()
runApp()
?updateSelectInput()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?sendInputMessage()
?updateNumericInput()
runApp()
runApp()
?reactiveValuesToList()
?shinyalert()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(shiny)
?update()
library(shiny)
?reactiveValuesToList()
?downloadHandler()
runApp()
runApp()
>observeEvent
?observeEvent()
runApp()
runApp()
runApp()
?downloadHandler()
?dput
?downloadHandler
runApp()
runApp()
?downloadHandler
shiny::runApp()
library(shiny)
?downloadHandler()
?dput()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?saveRDS
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("C:/Users/idodo/Downloads")
fname <- "Export_2022-12-24.rds"
file.exists(fname)
x <- readRDS(fname)
View(x)
str(x[[1]])
df <- as.data.frame() x[[1]])
df <- as.data.frame( x[[1]])
View(df)
View(x)
View(x)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
fname <- "Export_2022-12-24 (4).rds"
file.exists(fname)
setwd("C:/Users/idodo/Downloads")
file.exists(fname)
x <- readRDS(fname)
View(x)
df <- as.data.frame(x[[1]])
View(df)
shiny::runApp()
library(shiny)
?uploadButton()
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("C:/Users/idodo/Downloads")
fname <- "Export_2022-12-24.rds"
file.exists(fname)
x <- readRDS(fname)
View(x)
fname <- "Export_2022-12-2.rds"
file.exists(fname)
x <- readRDS(fname)
file.exists(fname)
fname <- "Export_2022-12-25.rds"
file.exists(fname)
x <- readRDS(fname)
View(x)
runApp('~/myR_on_GitHub/shiny/mlay1D')
fname <- "Export_2022-12-25.rds"
file.exists(fname)
x <- readRDS(fname)
View(x)
runApp('~/myR_on_GitHub/shiny/mlay1D')
runApp('~/myR_on_GitHub/shiny/mlay1D')
runApp('~/myR_on_GitHub/shiny/mlay1D')
runApp('~/myR_on_GitHub/shiny/mlay1D')
fname <- "Export_2022-12-25.rds"
file.exists(fname)
x <- readRDS(fname)
View(x)
runApp('~/myR_on_GitHub/shiny/mlay1D')
?updateNumericInput()
runApp('~/myR_on_GitHub/shiny/mlay1D')
runApp('~/myR_on_GitHub/shiny/mlay1D')
runApp('~/myR_on_GitHub/shiny/mlay1D')
fname <- "Export_2022-12-25.rds"
file.exists(fname)
x <- readRDS(fname)
View(x)
runApp('~/myR_on_GitHub/shiny/mlay1D')
runApp('~/myR_on_GitHub/shiny/mlay1D')
runApp('~/myR_on_GitHub/shiny/mlay1D')
runApp('~/myR_on_GitHub/shiny/mlay1D')
runApp('~/myR_on_GitHub/shiny/mlay1D')
library(shiny)
?updateNumericInput()
library(shinyMatrix)
?dropNulls()
l <- list( NULL, NULL, foo, bar)
?complete.cases()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?inputvalues
runApp()
runApp()
runApp()
runApp()
runApp()
library(shinyFiles)
runApp()
?shinyFiles::shinyFilesButton()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?shinyFileChoose()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
path_home()
path_home()
library(fs)
path_home()
runApp()
runApp()
runApp()
setwd("C:/tmp")
setwd("C:/Users/idodo/Downloads")
fname <- "Export_2022-12-25.rds"
file.exists(fname)
x <- readRDS(fname)
library(shiny)
?shinyFileChoose()
?fs()
fs::path_temp()
fs::path_ext("test.txt")
fs::path_ext_remove("test.txt")
fs::path_ext_remove("d://test.txt")
fs::path_wd()
runApp('~/myR_on_GitHub/shiny/mlay1D')
runApp('~/myR_on_GitHub/shiny/mlay1D')
?shinyFileChoose()
runApp('~/myR_on_GitHub/shiny/mlay1D')
runApp('~/myR_on_GitHub/shiny/mlay1D')
runApp('~/myR_on_GitHub/shiny/mlay1D')
runApp('~/myR_on_GitHub/shiny/mlay1D')
getVolumes()
?getVolumes()
volumes = getVolumes()
volumes <- c(Home = fs::path_home(), "R Installation" = R.home(), getVolumes()())
voumes
volumes
volumes = getVolumes()
volumes
getvolumes()
volumes <- c('wd' = fs::path_wd(), home=fs::path_home())
volumes
runApp('~/myR_on_GitHub/shiny/mlay1D')
?parseFilePaths()
runApp('~/myR_on_GitHub/shiny/mlay1D')
runApp('~/myR_on_GitHub/shiny/mlay1D')
runApp('~/myR_on_GitHub/shiny/mlay1D')
runApp('~/myR_on_GitHub/shiny/mlay1D')
shiny::runApp()
?downloadHandler()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
library(shinyFiles)
?shinyFileChoose
?downloadHandler()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?shinyFileButton()
?shinyFilesButton()
runApp()
runApp()
runApp()
?saveRDS()
?downloadHandler()
?shinyFilesButton()
runApp()
runApp()
runApp()
runApp()
?shinyFileSave()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?parseFilePaths
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?saveRDS()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
library(rlang)
install.packages("rlang")
library(rlang)
shiny::runApp()
shiny::runApp()
install.packages("zip")
runApp()
install.packages("clipr")
install.packages("data.table")
runApp()
install.packages("installr")
install.packages("xlsx")
runApp()
install.packages("udpipe")
runApp()
install.packages("openxlsx")
runApp()
